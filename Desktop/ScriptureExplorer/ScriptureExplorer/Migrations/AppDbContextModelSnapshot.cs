// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScriptureExplorer.Data;

#nullable disable

namespace ScriptureExplorer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ScriptureExplorer.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Testament")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalChapters")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Genesis",
                            Testament = "Old",
                            TotalChapters = 50
                        },
                        new
                        {
                            Id = 2,
                            Name = "John",
                            Testament = "New",
                            TotalChapters = 21
                        },
                        new
                        {
                            Id = 3,
                            Name = "Al-Baqarah",
                            Testament = "Quran",
                            TotalChapters = 1
                        });
                });

            modelBuilder.Entity("ScriptureExplorer.Models.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Chapters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            Number = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            Number = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            Number = 1
                        });
                });

            modelBuilder.Entity("ScriptureExplorer.Models.Verse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapterId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId");

                    b.ToTable("Verses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChapterId = 1,
                            Number = 1,
                            Text = "In the beginning God created the heavens and the earth."
                        },
                        new
                        {
                            Id = 2,
                            ChapterId = 2,
                            Number = 16,
                            Text = "For God so loved the world that he gave his one and only Son, that whoever believes in him shall not perish but have eternal life."
                        },
                        new
                        {
                            Id = 3,
                            ChapterId = 3,
                            Number = 255,
                            Text = "Allah! There is no deity except Him, the Ever-Living, the Sustainer of existence."
                        });
                });

            modelBuilder.Entity("ScriptureExplorer.Models.Chapter", b =>
                {
                    b.HasOne("ScriptureExplorer.Models.Book", "Book")
                        .WithMany("Chapters")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("ScriptureExplorer.Models.Verse", b =>
                {
                    b.HasOne("ScriptureExplorer.Models.Chapter", "Chapter")
                        .WithMany("Verses")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("ScriptureExplorer.Models.Book", b =>
                {
                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("ScriptureExplorer.Models.Chapter", b =>
                {
                    b.Navigation("Verses");
                });
#pragma warning restore 612, 618
        }
    }
}
